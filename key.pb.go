// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.0
// source: key.proto

package zelligo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Key_KeyModifier int32

const (
	Key_CTRL Key_KeyModifier = 0
	Key_ALT  Key_KeyModifier = 1
)

// Enum value maps for Key_KeyModifier.
var (
	Key_KeyModifier_name = map[int32]string{
		0: "CTRL",
		1: "ALT",
	}
	Key_KeyModifier_value = map[string]int32{
		"CTRL": 0,
		"ALT":  1,
	}
)

func (x Key_KeyModifier) Enum() *Key_KeyModifier {
	p := new(Key_KeyModifier)
	*p = x
	return p
}

func (x Key_KeyModifier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Key_KeyModifier) Descriptor() protoreflect.EnumDescriptor {
	return file_key_proto_enumTypes[0].Descriptor()
}

func (Key_KeyModifier) Type() protoreflect.EnumType {
	return &file_key_proto_enumTypes[0]
}

func (x Key_KeyModifier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Key_KeyModifier.Descriptor instead.
func (Key_KeyModifier) EnumDescriptor() ([]byte, []int) {
	return file_key_proto_rawDescGZIP(), []int{0, 0}
}

type Key_NamedKey int32

const (
	Key_PageDown   Key_NamedKey = 0
	Key_PageUp     Key_NamedKey = 1
	Key_LeftArrow  Key_NamedKey = 2
	Key_DownArrow  Key_NamedKey = 3
	Key_UpArrow    Key_NamedKey = 4
	Key_RightArrow Key_NamedKey = 5
	Key_Home       Key_NamedKey = 6
	Key_End        Key_NamedKey = 7
	Key_Backspace  Key_NamedKey = 8
	Key_Delete     Key_NamedKey = 9
	Key_Insert     Key_NamedKey = 10
	Key_F1         Key_NamedKey = 11
	Key_F2         Key_NamedKey = 12
	Key_F3         Key_NamedKey = 13
	Key_F4         Key_NamedKey = 14
	Key_F5         Key_NamedKey = 15
	Key_F6         Key_NamedKey = 16
	Key_F7         Key_NamedKey = 17
	Key_F8         Key_NamedKey = 18
	Key_F9         Key_NamedKey = 19
	Key_F10        Key_NamedKey = 20
	Key_F11        Key_NamedKey = 21
	Key_F12        Key_NamedKey = 22
	Key_Tab        Key_NamedKey = 23
	Key_Esc        Key_NamedKey = 24
)

// Enum value maps for Key_NamedKey.
var (
	Key_NamedKey_name = map[int32]string{
		0:  "PageDown",
		1:  "PageUp",
		2:  "LeftArrow",
		3:  "DownArrow",
		4:  "UpArrow",
		5:  "RightArrow",
		6:  "Home",
		7:  "End",
		8:  "Backspace",
		9:  "Delete",
		10: "Insert",
		11: "F1",
		12: "F2",
		13: "F3",
		14: "F4",
		15: "F5",
		16: "F6",
		17: "F7",
		18: "F8",
		19: "F9",
		20: "F10",
		21: "F11",
		22: "F12",
		23: "Tab",
		24: "Esc",
	}
	Key_NamedKey_value = map[string]int32{
		"PageDown":   0,
		"PageUp":     1,
		"LeftArrow":  2,
		"DownArrow":  3,
		"UpArrow":    4,
		"RightArrow": 5,
		"Home":       6,
		"End":        7,
		"Backspace":  8,
		"Delete":     9,
		"Insert":     10,
		"F1":         11,
		"F2":         12,
		"F3":         13,
		"F4":         14,
		"F5":         15,
		"F6":         16,
		"F7":         17,
		"F8":         18,
		"F9":         19,
		"F10":        20,
		"F11":        21,
		"F12":        22,
		"Tab":        23,
		"Esc":        24,
	}
)

func (x Key_NamedKey) Enum() *Key_NamedKey {
	p := new(Key_NamedKey)
	*p = x
	return p
}

func (x Key_NamedKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Key_NamedKey) Descriptor() protoreflect.EnumDescriptor {
	return file_key_proto_enumTypes[1].Descriptor()
}

func (Key_NamedKey) Type() protoreflect.EnumType {
	return &file_key_proto_enumTypes[1]
}

func (x Key_NamedKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Key_NamedKey.Descriptor instead.
func (Key_NamedKey) EnumDescriptor() ([]byte, []int) {
	return file_key_proto_rawDescGZIP(), []int{0, 1}
}

type Key_Char int32

const (
	Key_a     Key_Char = 0
	Key_b     Key_Char = 1
	Key_c     Key_Char = 2
	Key_d     Key_Char = 3
	Key_e     Key_Char = 4
	Key_f     Key_Char = 5
	Key_g     Key_Char = 6
	Key_h     Key_Char = 7
	Key_i     Key_Char = 8
	Key_j     Key_Char = 9
	Key_k     Key_Char = 10
	Key_l     Key_Char = 11
	Key_m     Key_Char = 12
	Key_n     Key_Char = 13
	Key_o     Key_Char = 14
	Key_p     Key_Char = 15
	Key_q     Key_Char = 16
	Key_r     Key_Char = 17
	Key_s     Key_Char = 18
	Key_t     Key_Char = 19
	Key_u     Key_Char = 20
	Key_v     Key_Char = 21
	Key_w     Key_Char = 22
	Key_x     Key_Char = 23
	Key_y     Key_Char = 24
	Key_z     Key_Char = 25
	Key_zero  Key_Char = 26
	Key_one   Key_Char = 27
	Key_two   Key_Char = 28
	Key_three Key_Char = 29
	Key_four  Key_Char = 30
	Key_five  Key_Char = 31
	Key_six   Key_Char = 32
	Key_seven Key_Char = 33
	Key_eight Key_Char = 34
	Key_nine  Key_Char = 35
)

// Enum value maps for Key_Char.
var (
	Key_Char_name = map[int32]string{
		0:  "a",
		1:  "b",
		2:  "c",
		3:  "d",
		4:  "e",
		5:  "f",
		6:  "g",
		7:  "h",
		8:  "i",
		9:  "j",
		10: "k",
		11: "l",
		12: "m",
		13: "n",
		14: "o",
		15: "p",
		16: "q",
		17: "r",
		18: "s",
		19: "t",
		20: "u",
		21: "v",
		22: "w",
		23: "x",
		24: "y",
		25: "z",
		26: "zero",
		27: "one",
		28: "two",
		29: "three",
		30: "four",
		31: "five",
		32: "six",
		33: "seven",
		34: "eight",
		35: "nine",
	}
	Key_Char_value = map[string]int32{
		"a":     0,
		"b":     1,
		"c":     2,
		"d":     3,
		"e":     4,
		"f":     5,
		"g":     6,
		"h":     7,
		"i":     8,
		"j":     9,
		"k":     10,
		"l":     11,
		"m":     12,
		"n":     13,
		"o":     14,
		"p":     15,
		"q":     16,
		"r":     17,
		"s":     18,
		"t":     19,
		"u":     20,
		"v":     21,
		"w":     22,
		"x":     23,
		"y":     24,
		"z":     25,
		"zero":  26,
		"one":   27,
		"two":   28,
		"three": 29,
		"four":  30,
		"five":  31,
		"six":   32,
		"seven": 33,
		"eight": 34,
		"nine":  35,
	}
)

func (x Key_Char) Enum() *Key_Char {
	p := new(Key_Char)
	*p = x
	return p
}

func (x Key_Char) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Key_Char) Descriptor() protoreflect.EnumDescriptor {
	return file_key_proto_enumTypes[2].Descriptor()
}

func (Key_Char) Type() protoreflect.EnumType {
	return &file_key_proto_enumTypes[2]
}

func (x Key_Char) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Key_Char.Descriptor instead.
func (Key_Char) EnumDescriptor() ([]byte, []int) {
	return file_key_proto_rawDescGZIP(), []int{0, 2}
}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modifier *Key_KeyModifier `protobuf:"varint,1,opt,name=modifier,proto3,enum=api.key.Key_KeyModifier,oneof" json:"modifier,omitempty"`
	// Types that are assignable to MainKey:
	//
	//	*Key_Key
	//	*Key_Char_
	MainKey isKey_MainKey `protobuf_oneof:"main_key"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_key_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_key_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_key_proto_rawDescGZIP(), []int{0}
}

func (x *Key) GetModifier() Key_KeyModifier {
	if x != nil && x.Modifier != nil {
		return *x.Modifier
	}
	return Key_CTRL
}

func (m *Key) GetMainKey() isKey_MainKey {
	if m != nil {
		return m.MainKey
	}
	return nil
}

func (x *Key) GetKey() Key_NamedKey {
	if x, ok := x.GetMainKey().(*Key_Key); ok {
		return x.Key
	}
	return Key_PageDown
}

func (x *Key) GetChar() Key_Char {
	if x, ok := x.GetMainKey().(*Key_Char_); ok {
		return x.Char
	}
	return Key_a
}

type isKey_MainKey interface {
	isKey_MainKey()
}

type Key_Key struct {
	Key Key_NamedKey `protobuf:"varint,2,opt,name=key,proto3,enum=api.key.Key_NamedKey,oneof"`
}

type Key_Char_ struct {
	Char Key_Char `protobuf:"varint,3,opt,name=char,proto3,enum=api.key.Key_Char,oneof"`
}

func (*Key_Key) isKey_MainKey() {}

func (*Key_Char_) isKey_MainKey() {}

var File_key_proto protoreflect.FileDescriptor

var file_key_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x70, 0x69,
	0x2e, 0x6b, 0x65, 0x79, 0x22, 0x83, 0x06, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x08,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6b, 0x65, 0x79, 0x2e, 0x4b, 0x65, 0x79, 0x2e, 0x4b, 0x65, 0x79,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6b, 0x65, 0x79, 0x2e, 0x4b,
	0x65, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6b, 0x65, 0x79, 0x2e, 0x4b, 0x65, 0x79, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x48, 0x00, 0x52, 0x04, 0x63, 0x68, 0x61, 0x72, 0x22, 0x20, 0x0a, 0x0b, 0x4b,
	0x65, 0x79, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x54,
	0x52, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x54, 0x10, 0x01, 0x22, 0x8e, 0x02,
	0x0a, 0x08, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x61, 0x67, 0x65,
	0x55, 0x70, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x65, 0x66, 0x74, 0x41, 0x72, 0x72, 0x6f,
	0x77, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x6f, 0x77, 0x6e, 0x41, 0x72, 0x72, 0x6f, 0x77,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x70, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x10, 0x04, 0x12,
	0x0e, 0x0a, 0x0a, 0x52, 0x69, 0x67, 0x68, 0x74, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x10, 0x05, 0x12,
	0x08, 0x0a, 0x04, 0x48, 0x6f, 0x6d, 0x65, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x6e, 0x64,
	0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x61, 0x63, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x10,
	0x08, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x09, 0x12, 0x0a, 0x0a,
	0x06, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x10, 0x0a, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x31, 0x10,
	0x0b, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x32, 0x10, 0x0c, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x33, 0x10,
	0x0d, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x34, 0x10, 0x0e, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x35, 0x10,
	0x0f, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x36, 0x10, 0x10, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x37, 0x10,
	0x11, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x38, 0x10, 0x12, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x39, 0x10,
	0x13, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x31, 0x30, 0x10, 0x14, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x31,
	0x31, 0x10, 0x15, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x31, 0x32, 0x10, 0x16, 0x12, 0x07, 0x0a, 0x03,
	0x54, 0x61, 0x62, 0x10, 0x17, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x73, 0x63, 0x10, 0x18, 0x22, 0xa0,
	0x02, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x72, 0x12, 0x05, 0x0a, 0x01, 0x61, 0x10, 0x00, 0x12, 0x05,
	0x0a, 0x01, 0x62, 0x10, 0x01, 0x12, 0x05, 0x0a, 0x01, 0x63, 0x10, 0x02, 0x12, 0x05, 0x0a, 0x01,
	0x64, 0x10, 0x03, 0x12, 0x05, 0x0a, 0x01, 0x65, 0x10, 0x04, 0x12, 0x05, 0x0a, 0x01, 0x66, 0x10,
	0x05, 0x12, 0x05, 0x0a, 0x01, 0x67, 0x10, 0x06, 0x12, 0x05, 0x0a, 0x01, 0x68, 0x10, 0x07, 0x12,
	0x05, 0x0a, 0x01, 0x69, 0x10, 0x08, 0x12, 0x05, 0x0a, 0x01, 0x6a, 0x10, 0x09, 0x12, 0x05, 0x0a,
	0x01, 0x6b, 0x10, 0x0a, 0x12, 0x05, 0x0a, 0x01, 0x6c, 0x10, 0x0b, 0x12, 0x05, 0x0a, 0x01, 0x6d,
	0x10, 0x0c, 0x12, 0x05, 0x0a, 0x01, 0x6e, 0x10, 0x0d, 0x12, 0x05, 0x0a, 0x01, 0x6f, 0x10, 0x0e,
	0x12, 0x05, 0x0a, 0x01, 0x70, 0x10, 0x0f, 0x12, 0x05, 0x0a, 0x01, 0x71, 0x10, 0x10, 0x12, 0x05,
	0x0a, 0x01, 0x72, 0x10, 0x11, 0x12, 0x05, 0x0a, 0x01, 0x73, 0x10, 0x12, 0x12, 0x05, 0x0a, 0x01,
	0x74, 0x10, 0x13, 0x12, 0x05, 0x0a, 0x01, 0x75, 0x10, 0x14, 0x12, 0x05, 0x0a, 0x01, 0x76, 0x10,
	0x15, 0x12, 0x05, 0x0a, 0x01, 0x77, 0x10, 0x16, 0x12, 0x05, 0x0a, 0x01, 0x78, 0x10, 0x17, 0x12,
	0x05, 0x0a, 0x01, 0x79, 0x10, 0x18, 0x12, 0x05, 0x0a, 0x01, 0x7a, 0x10, 0x19, 0x12, 0x08, 0x0a,
	0x04, 0x7a, 0x65, 0x72, 0x6f, 0x10, 0x1a, 0x12, 0x07, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x10, 0x1b,
	0x12, 0x07, 0x0a, 0x03, 0x74, 0x77, 0x6f, 0x10, 0x1c, 0x12, 0x09, 0x0a, 0x05, 0x74, 0x68, 0x72,
	0x65, 0x65, 0x10, 0x1d, 0x12, 0x08, 0x0a, 0x04, 0x66, 0x6f, 0x75, 0x72, 0x10, 0x1e, 0x12, 0x08,
	0x0a, 0x04, 0x66, 0x69, 0x76, 0x65, 0x10, 0x1f, 0x12, 0x07, 0x0a, 0x03, 0x73, 0x69, 0x78, 0x10,
	0x20, 0x12, 0x09, 0x0a, 0x05, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x10, 0x21, 0x12, 0x09, 0x0a, 0x05,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x10, 0x22, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x69, 0x6e, 0x65, 0x10,
	0x23, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_key_proto_rawDescOnce sync.Once
	file_key_proto_rawDescData = file_key_proto_rawDesc
)

func file_key_proto_rawDescGZIP() []byte {
	file_key_proto_rawDescOnce.Do(func() {
		file_key_proto_rawDescData = protoimpl.X.CompressGZIP(file_key_proto_rawDescData)
	})
	return file_key_proto_rawDescData
}

var file_key_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_key_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_key_proto_goTypes = []interface{}{
	(Key_KeyModifier)(0), // 0: api.key.Key.KeyModifier
	(Key_NamedKey)(0),    // 1: api.key.Key.NamedKey
	(Key_Char)(0),        // 2: api.key.Key.Char
	(*Key)(nil),          // 3: api.key.Key
}
var file_key_proto_depIdxs = []int32{
	0, // 0: api.key.Key.modifier:type_name -> api.key.Key.KeyModifier
	1, // 1: api.key.Key.key:type_name -> api.key.Key.NamedKey
	2, // 2: api.key.Key.char:type_name -> api.key.Key.Char
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_key_proto_init() }
func file_key_proto_init() {
	if File_key_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_key_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_key_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Key_Key)(nil),
		(*Key_Char_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_key_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_key_proto_goTypes,
		DependencyIndexes: file_key_proto_depIdxs,
		EnumInfos:         file_key_proto_enumTypes,
		MessageInfos:      file_key_proto_msgTypes,
	}.Build()
	File_key_proto = out.File
	file_key_proto_rawDesc = nil
	file_key_proto_goTypes = nil
	file_key_proto_depIdxs = nil
}
