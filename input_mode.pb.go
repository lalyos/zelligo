// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.0
// source: input_mode.proto

package zelligo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InputMode int32

const (
	// / In `Normal` mode, input is always written to the terminal, except for the shortcuts leading
	// / to other modes
	InputMode_Normal InputMode = 0
	// / In `Locked` mode, input is always written to the terminal and all shortcuts are disabled
	// / except the one leading back to normal mode
	InputMode_Locked InputMode = 1
	// / `Resize` mode allows resizing the different existing panes.
	InputMode_Resize InputMode = 2
	// / `Pane` mode allows creating and closing panes, as well as moving between them.
	InputMode_Pane InputMode = 3
	// / `Tab` mode allows creating and closing tabs, as well as moving between them.
	InputMode_Tab InputMode = 4
	// / `Scroll` mode allows scrolling up and down within a pane.
	InputMode_Scroll InputMode = 5
	// / `EnterSearch` mode allows for typing in the needle for a search in the scroll buffer of a pane.
	InputMode_EnterSearch InputMode = 6
	// / `Search` mode allows for searching a term in a pane (superset of `Scroll`).
	InputMode_Search InputMode = 7
	// / `RenameTab` mode allows assigning a new name to a tab.
	InputMode_RenameTab InputMode = 8
	// / `RenamePane` mode allows assigning a new name to a pane.
	InputMode_RenamePane InputMode = 9
	// / `Session` mode allows detaching sessions
	InputMode_Session InputMode = 10
	// / `Move` mode allows moving the different existing panes within a tab
	InputMode_Move InputMode = 11
	// / `Prompt` mode allows interacting with active prompts.
	InputMode_Prompt InputMode = 12
	// / `Tmux` mode allows for basic tmux keybindings functionality
	InputMode_Tmux InputMode = 13
)

// Enum value maps for InputMode.
var (
	InputMode_name = map[int32]string{
		0:  "Normal",
		1:  "Locked",
		2:  "Resize",
		3:  "Pane",
		4:  "Tab",
		5:  "Scroll",
		6:  "EnterSearch",
		7:  "Search",
		8:  "RenameTab",
		9:  "RenamePane",
		10: "Session",
		11: "Move",
		12: "Prompt",
		13: "Tmux",
	}
	InputMode_value = map[string]int32{
		"Normal":      0,
		"Locked":      1,
		"Resize":      2,
		"Pane":        3,
		"Tab":         4,
		"Scroll":      5,
		"EnterSearch": 6,
		"Search":      7,
		"RenameTab":   8,
		"RenamePane":  9,
		"Session":     10,
		"Move":        11,
		"Prompt":      12,
		"Tmux":        13,
	}
)

func (x InputMode) Enum() *InputMode {
	p := new(InputMode)
	*p = x
	return p
}

func (x InputMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InputMode) Descriptor() protoreflect.EnumDescriptor {
	return file_input_mode_proto_enumTypes[0].Descriptor()
}

func (InputMode) Type() protoreflect.EnumType {
	return &file_input_mode_proto_enumTypes[0]
}

func (x InputMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InputMode.Descriptor instead.
func (InputMode) EnumDescriptor() ([]byte, []int) {
	return file_input_mode_proto_rawDescGZIP(), []int{0}
}

type InputModeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputMode InputMode `protobuf:"varint,1,opt,name=input_mode,json=inputMode,proto3,enum=api.input_mode.InputMode" json:"input_mode,omitempty"`
}

func (x *InputModeMessage) Reset() {
	*x = InputModeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_input_mode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputModeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputModeMessage) ProtoMessage() {}

func (x *InputModeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_input_mode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputModeMessage.ProtoReflect.Descriptor instead.
func (*InputModeMessage) Descriptor() ([]byte, []int) {
	return file_input_mode_proto_rawDescGZIP(), []int{0}
}

func (x *InputModeMessage) GetInputMode() InputMode {
	if x != nil {
		return x.InputMode
	}
	return InputMode_Normal
}

var File_input_mode_proto protoreflect.FileDescriptor

var file_input_mode_proto_rawDesc = []byte{
	0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x22, 0x4c, 0x0a, 0x10, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x2a, 0xb7, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65,
	0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x61, 0x6e, 0x65, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03,
	0x54, 0x61, 0x62, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x10,
	0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x10, 0x07, 0x12, 0x0d,
	0x0a, 0x09, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x10, 0x08, 0x12, 0x0e, 0x0a,
	0x0a, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x10, 0x09, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x6f,
	0x76, 0x65, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x10, 0x0c,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x6d, 0x75, 0x78, 0x10, 0x0d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_input_mode_proto_rawDescOnce sync.Once
	file_input_mode_proto_rawDescData = file_input_mode_proto_rawDesc
)

func file_input_mode_proto_rawDescGZIP() []byte {
	file_input_mode_proto_rawDescOnce.Do(func() {
		file_input_mode_proto_rawDescData = protoimpl.X.CompressGZIP(file_input_mode_proto_rawDescData)
	})
	return file_input_mode_proto_rawDescData
}

var file_input_mode_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_input_mode_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_input_mode_proto_goTypes = []interface{}{
	(InputMode)(0),           // 0: api.input_mode.InputMode
	(*InputModeMessage)(nil), // 1: api.input_mode.InputModeMessage
}
var file_input_mode_proto_depIdxs = []int32{
	0, // 0: api.input_mode.InputModeMessage.input_mode:type_name -> api.input_mode.InputMode
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_input_mode_proto_init() }
func file_input_mode_proto_init() {
	if File_input_mode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_input_mode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputModeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_input_mode_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_input_mode_proto_goTypes,
		DependencyIndexes: file_input_mode_proto_depIdxs,
		EnumInfos:         file_input_mode_proto_enumTypes,
		MessageInfos:      file_input_mode_proto_msgTypes,
	}.Build()
	File_input_mode_proto = out.File
	file_input_mode_proto_rawDesc = nil
	file_input_mode_proto_goTypes = nil
	file_input_mode_proto_depIdxs = nil
}
